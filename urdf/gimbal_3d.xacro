<?xml version="1.0"?>
<robot name="gimbal_3d" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- =================================================================== -->
  <!--               3-Eksenli Gimbal ve Kamera Makrosu                    -->
  <!-- =================================================================== -->
  <!-- Bu makro, gimbal modelini yeniden kullanılabilir bir bileşen olarak tanımlar. -->
  <!-- 'parent_link' parametresi ile istediğiniz bir robota bağlayabilirsiniz. -->
  <!-- 'namespace' parametresi, sürü simülasyonlarında isim çakışmalarını önler. -->

  <xacro:arg name="package_name" default="fpv_drone" />
  <xacro:arg name="parent_link" default="base_link" />
  <xacro:arg name="rgb" default="0 1 1" />
  <xacro:arg name="rpy" default="0 0 0" />
  <xacro:arg name="xyz" default="0 0 0" />
  <xacro:arg name="instance" default="0" />

  <xacro:property name="package_name" value="$(arg package_name)" />
  <xacro:property name="parent_link" value="$(arg parent_link)" />
  <xacro:property name="rgb" value="$(arg rgb)" />
  <xacro:property name="rpy" value="$(arg rpy)" />
  <xacro:property name="xyz" value="$(arg xyz)" />
  <xacro:property name="instance" value="$(arg instance)" />

  <xacro:property name="STREAM_PORT" value="${5600 + int($(arg instance)) * 10}" />
  <xacro:property name="pi" value="3.14159265358979323846" />

  <!-- Gimbal'ı ana robota (parent_link) bağlayan sabit joint -->
  <joint name="gimbal_joint" type="fixed">
    <parent link="${parent_link}" />
    <child link="gimbal_base_link" />
    <origin xyz="${xyz}" rpy="${rpy}" />
    <axis xyz="0 0 1">
      <limit lower="0" upper="0" effort="0" velocity="0" />
    </axis>
  </joint>

  <!-- ========= GIMBAL LINKLERİ VE JOINT'LERİ ========= -->

  <!-- Base Link: Gimbal'ın ana robota bağlandığı temel parça -->
  <link name="gimbal_base_link">
    <inertial>
      <mass value="0.2" />
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001" />
    </inertial>

    <visual name="gimbal_base_link_visual">
      <geometry>
        <mesh filename="package://${package_name}/meshes/gimbal_3d/base_plate.dae" />
      </geometry>
      <material name="gimbal_material">
        <color rgba="${rgb} 1" />
      </material>
    </visual>

    <collision name="gimbal_base_link_collision">
      <origin xyz="0.01 0.075 -0.025" rpy="0 0 0" />
      <geometry>
        <box size="0.1 0.05 0.15" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="gimbal_base_link">
    <visual name="gimbal_base_link_visual">
      <material name="gimbal_material">
        <diffuse>${rgb} 1</diffuse>
        <ambient>${rgb} 1</ambient>
        <specular>1 1 1 1</specular>
      </material>
    </visual>
  </gazebo>

  <!-- Yaw Link: Dikey eksende dönen parça (Sağa-sola) -->
  <link name="gimbal_yaw_link">
    <inertial>
      <mass value="0.01" />
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00001" iyz="0" izz="0.00001" />
    </inertial>

    <visual name="gimbal_yaw_link_visual">
      <geometry>
        <mesh filename="package://${package_name}/meshes/gimbal_3d/yaw_arm.dae" />
      </geometry>
      <material name="gimbal_material" />
    </visual>

    <collision name="gimbal_yaw_link_collision">
      <geometry>
        <mesh filename="package://${package_name}/meshes/gimbal_3d/yaw_arm.dae" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="gimbal_yaw_link">
    <visual name="gimbal_yaw_link_visual">
      <material name="gimbal_material">
        <diffuse>${rgb} 1</diffuse>
        <ambient>${rgb} 1</ambient>
        <specular>1 1 1 1</specular>
      </material>
    </visual>
  </gazebo>

  <joint name="gimbal_yaw_joint" type="revolute">
    <parent link="gimbal_base_link" />
    <child link="gimbal_yaw_link" />
    <origin xyz="0.0105 0.065 -0.002" rpy="0 0 0" />
    <axis xyz="0 1 0" />
    <limit lower="${- pi}" upper="${pi}" effort="10" velocity="10" />
    <dynamics damping="0.01" />
  </joint>

  <!-- Roll Link: İleri eksende dönen parça (Ufuk çizgisi) -->
  <link name="gimbal_roll_link">
    <inertial>
      <mass value="0.01" />
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00001" iyz="0" izz="0.00001" />
    </inertial>

    <visual name="gimbal_roll_link_visual">
      <geometry>
        <mesh filename="package://${package_name}/meshes/gimbal_3d/roll_arm.dae" />
      </geometry>
      <material name="gimbal_material" />
    </visual>

    <collision  name="gimbal_roll_link_collision">
      <geometry>
        <mesh filename="package://${package_name}/meshes/gimbal_3d/roll_arm.dae" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="gimbal_roll_link">
    <visual name="gimbal_roll_link_visual">
      <material name="gimbal_material">
        <diffuse>${rgb} 1</diffuse>
        <ambient>${rgb} 1</ambient>
        <specular>1 1 1 1</specular>
      </material>
    </visual>
  </gazebo>

  <joint name="gimbal_roll_joint" type="revolute">
    <parent link="gimbal_yaw_link" />
    <child link="gimbal_roll_link" />
    <origin xyz="0.0099 0.002 -0.05" rpy="0 0 0" />
    <axis xyz="0 0 1" />
    <limit lower="${- pi}" upper="${pi}" effort="10" velocity="10" />
    <dynamics damping="0.01" />
  </joint>

  <!-- Pitch Link: Yanal eksende dönen parça (Aşağı-yukarı), kamera bu linke bağlı -->
  <link name="gimbal_pitch_link">
    <inertial>
      <mass value="0.01" />
      <inertia ixx="0.00001" ixy="0" ixz="0" iyy="0.00001" iyz="0" izz="0.00001" />
    </inertial>

    <visual name="gimbal_camera_enclosure_visual">
      <geometry>
        <mesh filename="package://${package_name}/meshes/gimbal_3d/camera_enclosure.dae" />
      </geometry>
      <material name="gimbal_material" />
    </visual>

    <collision name="gimbal_camera_enclosure_collision">
      <geometry>
        <mesh filename="package://${package_name}/meshes/gimbal_3d/camera_enclosure.dae" />
      </geometry>
    </collision>

    <visual name="gimbal_camera_body_visual">
      <pose>0 0 0.02 0 0 0</pose>
      <geometry>
        <cylinder radius="0.025" length="0.050" />
      </geometry>
      <material name="gimbal_material" />
    </visual>

    <collision name="gimbal_camera_body_collision">
      <pose>0 0 0.02 0 0 0</pose>
      <geometry>
        <cylinder radius="0.025" length="0.050" />
      </geometry>
    </collision>
  </link>

  <joint name="gimbal_pitch_joint" type="revolute">
    <parent link="gimbal_roll_link" />
    <child link="gimbal_pitch_link" />
    <origin xyz="0.045 0.0021 0.0199" rpy="0 0 0" />
    <axis xyz="1 0 0" />
    <limit lower="${- pi}" upper="${pi}" effort="10" velocity="10" />
    <dynamics damping="0.01" />
  </joint>

  <!-- ========= GAZEBO EKLENTİLERİ ========= -->
  <!-- Not: Tüm eklentiler, referans verdikleri link'in <gazebo> bloğu içine yerleştirilir. -->

  <gazebo reference="gimbal_pitch_link">
    <visual name="gimbal_camera_enclosure_visual">
      <material name="gimbal_material">
        <diffuse>${rgb} 1</diffuse>
        <ambient>${rgb} 1</ambient>
        <specular>1 1 1 1</specular>
      </material>
    </visual>

    <visual name="gimbal_camera_body_visual">
      <material name="gimbal_material">
        <diffuse>${rgb} 1</diffuse>
        <ambient>${rgb} 1</ambient>
        <specular>1 1 1 1</specular>
      </material>
    </visual>

    <sensor name="camera_sensor" type="camera">
      <!-- SDF'deki pose -1.57 radyan, yaklaşık -90 derecedir. -->
      <pose>0 0 0 ${- pi / 2} ${- pi / 2} 0</pose>
      <camera>
        <horizontal_fov>2.0</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>15000</far>
        </clip>
      </camera>
      <always_on>1</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>

      <!-- Eklentiler, <sensor> bloğu içine <camera> ile aynı seviyeye yerleştirilir. -->
      <plugin filename="CameraZoomPlugin"
        name="CameraZoomPlugin">
        <max_zoom>125.0</max_zoom>
        <slew_rate>0.42514285714</slew_rate>
      </plugin>

      <plugin filename="GstCameraPlugin"
        name="GstCameraPlugin">
        <udp_host>127.0.0.1</udp_host>
        <udp_port>${STREAM_PORT}</udp_port>
        <use_basic_pipeline>true</use_basic_pipeline>
        <use_cuda>false</use_cuda>
      </plugin>
    </sensor>
  </gazebo>
</robot>